{
  "saveEvent": "INSERT INTO events (host_user_id, name, description, note, _what, _where, _when, is_poll, code) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9) RETURNING event_id;",
  "getEventByCode": "SELECT row_to_json(event) FROM (SELECT name, description, code, note, _what, _where, _when, event_id, is_poll, host_user_id, photo_url AS host_photo_url FROM events JOIN users ON host_user_id = users.user_id WHERE code = $1) event",
  "deleteEvent": "DELETE FROM events WHERE event_id = $1;",
  "saveUser": "INSERT INTO users (firstname, surname, email, password) VALUES ($1, $2, $3, $4) RETURNING firstname, surname, email, user_id, photo_url;",
  "getUserByEmail": "SELECT * FROM users WHERE email = $1;",
  "getUserById": "SELECT firstname, surname, email, user_id, photo_url FROM users WHERE user_id = $1;",
  "addInvitee": "INSERT INTO rsvps (user_id, event_id) VALUES ($1, $2) ON CONFLICT DO NOTHING;",
  "finaliseEvent": "UPDATE events SET _what = ARRAY[$2], _where = ARRAY[$3], _when = ARRAY[$4], is_poll = false, edited = true WHERE event_id = $1 RETURNING _what, _where, _when;",
  "getRsvps": "SELECT status, array_agg(json_build_object('user_id', users.user_id, 'firstname', firstname, 'surname', surname, 'photo_url', photo_url)) AS invitees FROM rsvps JOIN users ON users.user_id = rsvps.user_id WHERE event_id = $1 GROUP BY status;",
  "editEvent": "UPDATE events SET edited = true, name = $2, description = $3, note = $4, _what = ARRAY[$5], _where = ARRAY[$6], _when = ARRAY[$7] WHERE event_id = $1 RETURNING edited, name, description, note, _what, _where, _when, event_id;",
  "getEvent": "SELECT row_to_json(event) FROM (SELECT name, description, edited, code, note, _what, _where, _when, event_id, is_poll, host_user_id, photo_url AS host_photo_url FROM events JOIN users ON host_user_id = users.user_id WHERE event_id = $1) event;",
  "saveFeedItem": "INSERT INTO feeds (user_id, event_id, data) VALUES ($1, $2, $3) RETURNING id, data AS feed_item;",
  "getInviteesIds": "SELECT array_agg(user_id) AS ids FROM rsvps WHERE event_id = $1;",
  "updateUser": "UPDATE users SET firstname = $2, surname = $3 WHERE user_id = $1 RETURNING firstname, surname, email, user_id, photo_url;",
  "updateRsvp": "UPDATE rsvps SET status = $3 WHERE user_id = $1 AND event_id = $2;",
  "updateUserPhoto": "UPDATE users SET photo_url = $2 WHERE user_id = $1 RETURNING photo_url;",
  "getHostId": "SELECT host_user_id FROM events WHERE event_id = $1;",
  "updateResetToken": "UPDATE users SET reset_password_token = $2, reset_password_expires = $3 WHERE user_id = $1 RETURNING firstname, email, reset_password_token",
  "getUserByToken": "SELECT user_id, reset_password_expires FROM users WHERE reset_password_token = $1;",
  "resetUserPassword": "UPDATE users SET password = $2 WHERE user_id = $1 RETURNING firstname, email;",
  "getFeedItems": "SELECT id, data AS feed_item FROM feeds WHERE user_id = $1 ORDER BY id;",
  "markFeedItemAsViewed": "UPDATE feeds SET data = jsonb_set(data, '{viewed}', to_jsonb(true)) WHERE id = $1;",
  "getCategoryOptions": "SELECT array_length(_what, 1) AS _what, array_length(_where, 1) AS _where, array_length(_when, 1) AS _when FROM events WHERE event_id = $1;",
  "getCalendar": "SELECT status, name, events.event_id, host_user_id, _where AS where, _when AS when FROM rsvps JOIN events ON events.event_id = rsvps.event_id WHERE rsvps.user_id = $1 AND events.is_poll = false ORDER BY event_id;",
  "updateUserPushInfo": "UPDATE users SET push_info = $2 WHERE user_id = $1 RETURNING push_info;",
  "getPushTokenById": "SELECT push_info FROM users WHERE user_id = $1;"
}
